const person=(name,lastName,age)=>`Hola mi nombres es ${name} ${lastName} y mi edad es ${age} años`;console.log(person("André","Mauricio",29));const sumeOfCubes=(...collNumber)=>collNumber.map(number=>number**3).reduce((acc,val)=>acc+val);console.log(sumeOfCubes(1,5,9));const arrayMix=arrayM=>arrayM.map(arrayElement=>typeof arrayElement);console.log(arrayMix([1,2,3,"Hola"]));const rest=(...numeros)=>numeros.reduce((acc,val)=>acc+val);console.log(rest(1,20,3));const arrayNumbersOnly=array=>array.filter(value=>{if("string"!=typeof value)return value});console.log(arrayNumbersOnly(["Dede",20,"Daniel",30,!0]));const minMax=arrayNumber=>[Math.min(...arrayNumber),Math.max(...arrayNumber)];console.log(minMax([1,2,3,4,5]));const formatPhoneNumber=x=>`(${x[0]}${x[1]}${x[2]}) ${x[3]}${x[4]}${x[5]}-${x[6]}${x[7]}${x[8]}${x[9]}`;console.log(formatPhoneNumber([1,2,3,4,5,6,7,8,9,0]));const findLargestNumbs=matrix=>matrix.map(row=>Math.max(...row));console.log(findLargestNumbs([[4,2,7,1],[20,70,40,90],[1,2,0]]));const charIndex=(word,char)=>[word.indexOf(char),word.lastIndexOf(char)];console.log(charIndex("Hello","l"));const conversorToArray=object=>Object.entries(object);console.log(conversorToArray({a:1,b:2}));let GetSumOfBudgets=people=>people.map(person=>person.budget).reduce((acc,val)=>acc+val);console.log(GetSumOfBudgets([{name:"John",age:21,budget:23e3},{name:"Steve",age:32,budget:4e4},{name:"Martin",age:16,budget:2700}]));const getNames=array=>array.map(student=>student.name);console.log(getNames([{name:"Steve"},{name:"Mike"},{name:"Jhon"}]));const getDataPost=objectPost=>Object.entries(objectPost);console.log(getDataPost({likes:2,dislikes:3,followers:10}));const squaresSum=n=>[...Array(n+1).keys()].map(elementArray=>elementArray**2).reduce((acc,val)=>acc+val);console.log(squaresSum(3));const multiplyByLength=arreglo=>arreglo.map(element=>element*arreglo.length);console.log(multiplyByLength([2,3,1,0]));const countDown=number=>[...Array(number+1).keys()].reverse();console.log(countDown(5));const diffMaxMin=matrizx=>Math.max(...matrizx)-Math.min(...matrizx);console.log(diffMaxMin([10,4,1,4,-10,-50,32,21]));const filterList=array=>array.filter(elementArray=>{if("number"==typeof elementArray)return elementArray});console.log(filterList([1,2,3,"x","y",10]));const repeat=(elemento1,tiempo)=>Array(tiempo).fill(elemento1);console.log(repeat(13,5));const vReplace=word=>word.replace(/[aeiou]/gi,"u");console.log(vReplace("apples and bananas"));const findNemo=word=>"I found Nemo at "+word.search("Nemo");console.log(findNemo("I am finding Nemo !"));const wordIndex=word=>word.slice(0,word.length-1)+word[word.length-1].toUpperCase();function sumaDeNumeros(){let firstNumber=parseFloat(prompt("Porfavor ingrese el primer número que desea sumar")),secondNumber=parseFloat(prompt("Porfavor ingrese el segundo número que desea sumar"));console.log(firstNumber+secondNumber)}function potenciaDeNumeros(){let numberToPower=parseFloat(prompt("Porfavor ingrese un número el cual desea que se potencia")),power=parseFloat(prompt("Por favor ingrese la potencia"));console.log(((number,power)=>number**power)(numberToPower,power))}function sumaDeCubos(){const sumOfCubes=[1,5,9].map(numberInArray=>numberInArray**3).reduce((accurate,value)=>accurate+value);console.log(sumOfCubes)}function areaTriangulo(){let triangleBase=parseFloat(prompt("Porfavor ingrese la base del triángulo")),triangleHeight=parseFloat(prompt("Porfavor ingrese la altura del triángulo"));console.log(triangleBase*triangleHeight/2)}function operacionesAritmeticas(){((number1,number2,operator)=>{switch(operator){case"+":console.log(number1+number2);break;case"-":console.log(number1-number2);break;case"*":console.log(number1*number2);break;case"/":case"%":console.log(number1/number2);break;default:console.log("El operador no es reconocido")}})(parseFloat(prompt("Porfavor ingrese el primer número")),parseFloat(prompt("Porfavor ingrese el segundo número")),prompt("Porfavor ingrese un operador matemático"))}console.log(wordIndex("Hello")),sumaDeNumeros(),potenciaDeNumeros(),sumaDeCubos(),areaTriangulo(),operacionesAritmeticas();